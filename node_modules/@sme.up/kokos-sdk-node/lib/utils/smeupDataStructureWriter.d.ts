import stream from "stream";
import { ApiVersion, SmeupMessage } from "../types/data-structures/smeupDataStructure.js";
import { Fun } from "../types/general.js";
import { SmeupDataNode } from "../types/data-structures/smeupDataTree.js";
import { SmeupDataColumn, SmeupDataRow } from "../types/data-structures/smeupDataTable.js";
export declare class SmeupDataStructureWriter {
    private out;
    private version;
    private initalTimestamp;
    private messages;
    private dataColumns;
    private firstElement;
    private lastElementWritten;
    private isInitializationWritten;
    private isFinalizationWritten;
    private isColumnWritten;
    private isRowWritten;
    private isNodeWritten;
    constructor(out: stream.Writable, version?: ApiVersion);
    writeDataStructureInitialization(fun: Fun): void;
    writeDataStructureFinalization(fun: Fun): void;
    /**
     * Write a SmeupDataNode instance to stream
     * @param node
     */
    writeDataNode(node: SmeupDataNode): void;
    /**
     * Write SmeupDataColumns
     * @param columns
     */
    writeDataColumns(columns: SmeupDataColumn[]): void;
    /**
     * Write a SmeupDataColumn
     * @param col
     */
    writeDataColumn(col: SmeupDataColumn): void;
    writeDataRow(row: SmeupDataRow): void;
    writeMessage(message: SmeupMessage): void;
    writeRawDataContent(content: string): void;
}
