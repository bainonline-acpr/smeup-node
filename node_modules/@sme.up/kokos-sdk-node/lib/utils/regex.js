/**
 * Parse key(value) expression NB. Nested brackets must be even
 *
 * @param expression
 * @return
 */
export function parseKeyValueBetweenBrackets(expression) {
    const map = {};
    let key = "";
    let value = "";
    let bracketsCount = 0;
    let isKey = true;
    for (const c of expression) {
        if (isKey && c !== "(" && c !== ")") {
            // Check and accumulate key
            key += c;
        }
        else {
            if (c === "(") {
                if (bracketsCount === 0) {
                    // Start value expression
                    isKey = false;
                }
                else {
                    // Continue accumulating value expression
                    value += c;
                }
                bracketsCount++;
            }
            else {
                if (c === ")") {
                    if (bracketsCount === 1) {
                        // End value expression
                        map[key.trim()] = value;
                        isKey = true;
                        key = "";
                        value = "";
                    }
                    else {
                        // Continue accumulating value expression
                        value += c;
                    }
                    bracketsCount--;
                }
                else {
                    // Continue accumulating value expression
                    value += c;
                }
            }
        }
    }
    return map;
}
//# sourceMappingURL=regex.js.map